












# delete cluster
eksctl delete cluster --name spotifyrun
# delete nat gateway
aws ec2 delete-nat-gateway --nat-gateway-id nat-018178210594ca7b0
# delete elastic ip - management console

eksctl create cluster --name spotifyrun --region eu-north-1 --version 1.25 --vpc-private-subnets subnet-09f3f1da1eae43821,subnet-03602ceb80ce55996,subnet-0154e8fe765f4bb06 --fargate

#Installing the AWS Load Balancer Controller add-on
https://docs.aws.amazon.com/eks/latest/userguide/aws-load-balancer-controller.html
curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.7/docs/install/iam_policy.json

aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json


eksctl create iamserviceaccount \
  --cluster=spotifyrun \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name spotifyrunAmazonEKSLoadBalancerControllerRole \
  --attach-policy-arn=arn:aws:iam::690837617850:policy/spotifyrunAWSLoadBalancerControllerIAMPolicy \
  --approve


helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  -n kube-system \
  --set clusterName=spotifyrun \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=eu-north-1 \
  --set vpcId=vpc-08b50b8195a4dca54



AWS account k5rv sihvIx-gyktec-vebhy7
IAM user k5rv !tX5wAy!HwEG2ne
app home page https://d-c367126b8f.awsapps.com/start
RDS spotifyrun.c9xygpu1yrdl.eu-north-1.rds.amazonaws.com


== cluster
eksctl create cluster --name spotifyrun-cluster --region eu-north-1 --fargate

== load balancer controller
curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.7/docs/install/iam_policy_us-gov.json

aws iam create-policy \
    --policy-name spotifyrunAWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json

eksctl create iamserviceaccount \
  --cluster=spotifyrun-cluster \
  --namespace=kube-system \
  --name=spotifyrun-aws-load-balancer-controller \
  --role-name spotifyrunAmazonEKSLoadBalancerControllerRole \
  --attach-policy-arn=arn:aws:iam::690837617850:policy/spotifyrunAWSLoadBalancerControllerIAMPolicy \
  --approve

helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  -n kube-system \
  --set region=eu-north-1 \
  --set vpcId=vpc-05a0977e7cefa3fee \
  --set clusterName=spotifyrun-cluster \
  --set serviceAccount.create=false \
  --set serviceAccount.name=spotifyrun-aws-load-balancer-controller

also add labels to subnets, vpc and so on

== Amazon EKS node IAM role

aws iam create-role \
  --role-name spotifyrunAmazonEKSNodeRole \
  --assume-role-policy-document file://"node-role-trust-relationship.json"

aws iam attach-role-policy \
  --policy-arn arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy \
  --role-name spotifyrunAmazonEKSNodeRole

aws iam attach-role-policy \
  --policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly \
  --role-name spotifyrunAmazonEKSNodeRole

aws iam attach-role-policy \
  --policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \
  --role-name spotifyrunAmazonEKSNodeRole

== Configuring the Amazon VPC CNI plugin for Kubernetes to use IAM roles for service accounts

eksctl create iamserviceaccount \
    --name aws-node \
    --namespace kube-system \
    --cluster spotifyrun \
    --role-name "spotifyrunAmazonEKSVPCCNIRole" \
    --attach-policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \
    --override-existing-serviceaccounts \
    --approve

kubectl delete pods -n kube-system -l k8s-app=aws-node